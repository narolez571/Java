allprojects { projects ->
    defaultTasks 'clean', 'build'

    apply plugin: 'maven'
    apply plugin: 'java'
    apply plugin: 'idea'

    buildDir = 'target'
    version = '1.0-SNAPSHOT'
    group = 'org.suggs.sandbox'

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects { subprojects ->

    ext.genDir = "$buildDir/generated-src"
    sourceSets.main.java.srcDirs += genDir

    configurations { xjc }

    task xjc(dependsOn: processResources) {
        doLast {

            file(genDir).mkdirs()

            ant.taskdef(name: 'xjc',
                    classname: 'com.sun.tools.xjc.XJCTask',
                    classpath: configurations.xjc.asPath)

            sourceSets.main.output.resourcesDir.eachFileMatch(~/.*\.xsd/) { File file ->
                def fileName = file.name.split("\\.")[0]
                ant.xjc(destdir: genDir,
                        schema: "$sourceSets.main.output.resourcesDir/${fileName}.xsd",
                        binding: "$sourceSets.main.output.resourcesDir/${fileName}.xjb")

            }
        }
    }

    dependencies {
        xjc "com.sun.xml.bind:jaxb-xjc:2.2.2"

        compile "org.slf4j:slf4j-api:$slf4jVersion"

        runtime "org.slf4j:slf4j-log4j12:$slf4jVersion"
        runtime "log4j:log4j:$log4jVersion"

        testCompile "junit:junit:$junitVersion"
        testCompile "org.mockito:mockito-all:$mockitoVersion"
    }
}

project("sandbox:guice") {
    dependencies {
    }
}

project("sandbox:hibernate") {
    dependencies {
        compile "org.hibernate:hibernate-core:$hibernateVersion"

        runtime "org.springframework:spring-context:$springVersion"
        runtime "commons-dbcp:commons-dbcp:1.4"

        testCompile "org.springframework:spring-test:$springVersion"
        testCompile "org.springframework:spring-orm:$springVersion"
        testCompile "com.googlecode.multithreadedtc:multithreadedtc:1.01"
    }
}

project("sandbox:jaxb") {
    subprojects {
        compileJava.dependsOn xjc
    }
}

project("sandbox:jms") {
    dependencies {
        compile "javax.jms:jms:1.1"

        testCompile("org.apache.activemq:activemq-all:5.8.0") { exclude group: "org.slf4j" }
    }
}

project("sandbox:jmx") {
    dependencies {

    }
}

project("sandbox:oddsandsods") {
    dependencies {
        compile "log4j:log4j:$log4jVersion"
    }

}

project("sandbox:patterns") {
    dependencies {
        testCompile "org.springframework:spring-test:$springVersion"
        testCompile "org.springframework:spring-context:$springVersion"
    }
}

project("sandbox:spring") {
    dependencies {
        compile "org.springframework:spring-jdbc:$springVersion"
        compile "org.springframework:spring-context:$springVersion"

        testCompile "org.springframework:spring-test:$springVersion"

        runtime "commons-dbcp:commons-dbcp:1.4"
        runtime "org.hsqldb:hsqldb:2.2.8"
    }
}

project("sandbox:test") {
    dependencies {
        testCompile "edu.umd.cs.mtc:multithreadedtc:1.01"
        testCompile("com.natpryce:make-it-easy:3.1.0") { exclude group: "junit" }
    }
}

project("sandbox:tibco"){
    dependencies{
        compile "com.tibco.ems:tibjmsadmin:5.1.3"

        runtime "javax.jms:jms:1.1"
        runtime "com.tibco.ems:tibjms:5.1.3"
    }

}


